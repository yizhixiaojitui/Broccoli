<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.broccoli.blog.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="cn.broccoli.blog.po.Article" >
    <id column="article_id" property="articleId" jdbcType="SMALLINT" />
    <result column="article_name" property="articleName" jdbcType="VARCHAR" />
    <result column="article_time" property="articleTime" jdbcType="TIMESTAMP" />
    <result column="article_ip" property="articleIp" jdbcType="VARCHAR" />
    <result column="article_click" property="articleClick" jdbcType="INTEGER" />
    <result column="sort_article_id" property="sortArticleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="TINYINT" />
    <result column="article_type" property="articleType" jdbcType="INTEGER" />
    <result column="article_up" property="articleUp" jdbcType="TINYINT" />
    <result column="article_support" property="articleSupport" jdbcType="TINYINT" />
    <result column="article_label" property="articleLabel" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.broccoli.blog.po.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  
    <resultMap id="newBlog" type="cn.broccoli.blog.po.NewestBlog">
    <result column="article_id" property="articleId"/> 
    <result column="article_name" property="articleName"/> 
    <result column="article_time" property="articleTime" /> 
    <result column="user_nikename" property="userNikename"/> 
    <result column="article_click" property="articleClick"/> 
    <result column="sort_article_name" property="sortArticleName"/> 
    <result column="user_image_url" property="userImageUrl"/> 
  </resultMap>
  <resultMap id="BlogInfo" type="cn.broccoli.blog.po.BlogInfo">
    <result column="article_id" property="articleId"/> 
    <result column="article_name" property="articleName"/> 
    <result column="article_time" property="articleTime" /> 
    <result column="user_nikename" property="userNikename"/> 
    <result column="article_click" property="articleClick"/> 
    <result column="sort_article_name" property="sortArticleName"/> 
    <result column="article_content" property="articleContent"/>
    <result column="user_id" property="userId"/>
    <result column="user_description" property="userDescription"/> 
    <result column="user_image_url" property="userImageUrl"/> 
    <result column="article_label" property="articleLabel"/> 
  </resultMap>
  <select id="getByExampleNewBlogItems" parameterType="java.lang.Integer" resultMap="newBlog">
  SELECT A.article_id,A.article_name,A.article_time ,U.user_nikename,A.article_click,AR.sort_article_name,U.user_image_url,a.article_label FROM (article A inner join user U on A.user_id=U.user_id)
   INNER JOIN article_sort AR ON A.user_id=AR.user_id WHERE A.article_type=1 GROUP BY A.article_id ORDER BY A.article_time DESC limit #{pageIndex,jdbcType=INTEGER},6;
  </select>
  <select id="getBlogRowCount" resultType="java.lang.Integer">
  SELECT COUNT(*) FROM(SELECT A.article_id FROM (article A inner join user U on A.user_id=U.user_id)
   INNER JOIN article_sort AR ON A.user_id=AR.user_id WHERE A.article_type=1 GROUP BY A.article_id) C ;
  </select>
  <select id="getBlogInfobyId" parameterType="java.lang.Integer" resultMap="BlogInfo" >
  SELECT a.article_name,a.article_time,article_click,a.article_content,u.user_nikename,u.user_description,u.user_image_url,a.article_name,a.article_time,ar.sort_article_name FROM (article a inner join  user u on a.user_id=u.user_id)
  inner join article_sort ar on a.sort_article_id=ar.sort_article_id where a.article_id=#{blogId,jdbcType=INTEGER};
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    article_id, article_name, article_time, article_ip, article_click, sort_article_id, 
    user_id, type_id, article_type, article_up, article_support, article_label
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.broccoli.blog.po.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.broccoli.blog.po.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from article
    where article_id = #{articleId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.broccoli.blog.po.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.broccoli.blog.po.Article" >
    insert into article (article_id, article_name, article_time, 
      article_ip, article_click, sort_article_id, 
      user_id, type_id, article_type, 
      article_up, article_support, article_label, 
      article_content)
    values (#{articleId,jdbcType=SMALLINT}, #{articleName,jdbcType=VARCHAR}, #{articleTime,jdbcType=TIMESTAMP}, 
      #{articleIp,jdbcType=VARCHAR}, #{articleClick,jdbcType=INTEGER}, #{sortArticleId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=TINYINT}, #{articleType,jdbcType=INTEGER}, 
      #{articleUp,jdbcType=TINYINT}, #{articleSupport,jdbcType=TINYINT}, #{articleLabel,jdbcType=VARCHAR}, 
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.broccoli.blog.po.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="articleName != null" >
        article_name,
      </if>
      <if test="articleTime != null" >
        article_time,
      </if>
      <if test="articleIp != null" >
        article_ip,
      </if>
      <if test="articleClick != null" >
        article_click,
      </if>
      <if test="sortArticleId != null" >
        sort_article_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="articleType != null" >
        article_type,
      </if>
      <if test="articleUp != null" >
        article_up,
      </if>
      <if test="articleSupport != null" >
        article_support,
      </if>
      <if test="articleLabel != null" >
        article_label,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=SMALLINT},
      </if>
      <if test="articleName != null" >
        #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="articleTime != null" >
        #{articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleIp != null" >
        #{articleIp,jdbcType=VARCHAR},
      </if>
      <if test="articleClick != null" >
        #{articleClick,jdbcType=INTEGER},
      </if>
      <if test="sortArticleId != null" >
        #{sortArticleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=TINYINT},
      </if>
      <if test="articleType != null" >
        #{articleType,jdbcType=INTEGER},
      </if>
      <if test="articleUp != null" >
        #{articleUp,jdbcType=TINYINT},
      </if>
      <if test="articleSupport != null" >
        #{articleSupport,jdbcType=TINYINT},
      </if>
      <if test="articleLabel != null" >
        #{articleLabel,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.broccoli.blog.po.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=SMALLINT},
      </if>
      <if test="record.articleName != null" >
        article_name = #{record.articleName,jdbcType=VARCHAR},
      </if>
      <if test="record.articleTime != null" >
        article_time = #{record.articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.articleIp != null" >
        article_ip = #{record.articleIp,jdbcType=VARCHAR},
      </if>
      <if test="record.articleClick != null" >
        article_click = #{record.articleClick,jdbcType=INTEGER},
      </if>
      <if test="record.sortArticleId != null" >
        sort_article_id = #{record.sortArticleId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=TINYINT},
      </if>
      <if test="record.articleType != null" >
        article_type = #{record.articleType,jdbcType=INTEGER},
      </if>
      <if test="record.articleUp != null" >
        article_up = #{record.articleUp,jdbcType=TINYINT},
      </if>
      <if test="record.articleSupport != null" >
        article_support = #{record.articleSupport,jdbcType=TINYINT},
      </if>
      <if test="record.articleLabel != null" >
        article_label = #{record.articleLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.articleContent != null" >
        article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set article_id = #{record.articleId,jdbcType=SMALLINT},
      article_name = #{record.articleName,jdbcType=VARCHAR},
      article_time = #{record.articleTime,jdbcType=TIMESTAMP},
      article_ip = #{record.articleIp,jdbcType=VARCHAR},
      article_click = #{record.articleClick,jdbcType=INTEGER},
      sort_article_id = #{record.sortArticleId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=TINYINT},
      article_type = #{record.articleType,jdbcType=INTEGER},
      article_up = #{record.articleUp,jdbcType=TINYINT},
      article_support = #{record.articleSupport,jdbcType=TINYINT},
      article_label = #{record.articleLabel,jdbcType=VARCHAR},
      article_content = #{record.articleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set article_id = #{record.articleId,jdbcType=SMALLINT},
      article_name = #{record.articleName,jdbcType=VARCHAR},
      article_time = #{record.articleTime,jdbcType=TIMESTAMP},
      article_ip = #{record.articleIp,jdbcType=VARCHAR},
      article_click = #{record.articleClick,jdbcType=INTEGER},
      sort_article_id = #{record.sortArticleId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=TINYINT},
      article_type = #{record.articleType,jdbcType=INTEGER},
      article_up = #{record.articleUp,jdbcType=TINYINT},
      article_support = #{record.articleSupport,jdbcType=TINYINT},
      article_label = #{record.articleLabel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.broccoli.blog.po.Article" >
    update article
    <set >
      <if test="articleName != null" >
        article_name = #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="articleTime != null" >
        article_time = #{articleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleIp != null" >
        article_ip = #{articleIp,jdbcType=VARCHAR},
      </if>
      <if test="articleClick != null" >
        article_click = #{articleClick,jdbcType=INTEGER},
      </if>
      <if test="sortArticleId != null" >
        sort_article_id = #{sortArticleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
      <if test="articleType != null" >
        article_type = #{articleType,jdbcType=INTEGER},
      </if>
      <if test="articleUp != null" >
        article_up = #{articleUp,jdbcType=TINYINT},
      </if>
      <if test="articleSupport != null" >
        article_support = #{articleSupport,jdbcType=TINYINT},
      </if>
      <if test="articleLabel != null" >
        article_label = #{articleLabel,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.broccoli.blog.po.Article" >
    update article
    set article_name = #{articleName,jdbcType=VARCHAR},
      article_time = #{articleTime,jdbcType=TIMESTAMP},
      article_ip = #{articleIp,jdbcType=VARCHAR},
      article_click = #{articleClick,jdbcType=INTEGER},
      sort_article_id = #{sortArticleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=TINYINT},
      article_type = #{articleType,jdbcType=INTEGER},
      article_up = #{articleUp,jdbcType=TINYINT},
      article_support = #{articleSupport,jdbcType=TINYINT},
      article_label = #{articleLabel,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.broccoli.blog.po.Article" >
    update article
    set article_name = #{articleName,jdbcType=VARCHAR},
      article_time = #{articleTime,jdbcType=TIMESTAMP},
      article_ip = #{articleIp,jdbcType=VARCHAR},
      article_click = #{articleClick,jdbcType=INTEGER},
      sort_article_id = #{sortArticleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=TINYINT},
      article_type = #{articleType,jdbcType=INTEGER},
      article_up = #{articleUp,jdbcType=TINYINT},
      article_support = #{articleSupport,jdbcType=TINYINT},
      article_label = #{articleLabel,jdbcType=VARCHAR}
    where article_id = #{articleId,jdbcType=SMALLINT}
  </update>
</mapper>